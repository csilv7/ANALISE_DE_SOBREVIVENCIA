---
title: "Modelos AFT - FIOCRUZ"
author: "Breno C R Silva"
format: html
lang: pt
---

Em modelos AFT a função de sobrevivência é expressa por

$$
S(t | \mathbf{x}) = \exp \left\{- \alpha(\mathbf{x}) t \right\}.
$$

Com função de risco dada por

$$
\lambda(t | \mathbf{x}) = \alpha(\mathbf{x})
$$

onde $\alpha(\mathbf{x}) = \exp \left\{\mathbf{x'} \boldsymbol{\beta} \right\}$ .

Para estimação de parâmetros da distribuição e parâmetros da regressão deve-se usar o método de máxima verossimilhança. De forma que, a estimativa para o vetor $\theta = (\alpha, \beta_{0}, \beta_{1}, \beta_{2}, \ldots, \beta_{p})$ deve ser obtida maximizando a função:

```{=latex}
\begin{align*}
L(\theta) & = \prod_{i = 1}^{n} \left[f(t_{i} | \mathbf{x}) \right]^{\delta_{i}} \left[S(t_{i} | \mathbf{x}) \right]^{1 - \delta_{i}} \\
          & = \prod_{i = 1}^{n} \left[\lambda(t_{i} | \mathbf{x}) \right]^{\delta_{i}} S(t_{i} | \mathbf{x})
\end{align*}
```

## Implementação Computacional

### Geração dos Dados

```{r}
# Função de simulação dos dados
tAFTexp <- function(val.unif, x.cov, beta.par) {
  # Combinação linear dos preditores lineares
  effect <- x.cov %*% beta.par
  
  # Tempos de sobrevivência
  t <- - log(val.unif) / exp(effect)
  
  return(t)
}

sim.data.AFTexp <- function(n.size, x.cov, beta.par) {
  u <- runif(n.size)
  t <- rep(0, n.size)       # Tempos de Falha
  c <- rep(0, n.size)       # Tempos de Censura
  times <- rep(0, n.size)   # Tempo Observado
  
  # Interação
  for (i in 1:n.size){
    t[i] <- tAFTexp(val.unif=u[i], x.cov=x.cov[i, ], beta.par=beta.par)
    c[i] <- rexp(1, rate = 1)
    times[i] <- min(t[i],c[i])
  }
  
  # Tempos Observados
  delta <- ifelse(t <= c, 1, 0) 
  dados <- data.frame(times, delta, x.cov)
  
  return(dados)
}
```

```{r}
set.seed(123456789)

# Tamanho da amostra e número de variáveis
n <- 1000

# Parâmetro da distribuição exponencial
taxa <- 2

# Matriz Design
x1 <- rbinom(n = n, size = 1, prob=0.5)
x2 <- rnorm(n=n)
X <- cbind(1, x1, x2)

# Vetor de Coeficientes Betas
betas <- c(0.5, -0.5, 0.5)

# Simulando o Tempo de Sobrevivência
dados <- sim.data.AFTexp(n = n, beta.par = betas, x.cov = X)

head(dados)

# Proporção de Falhas
prop <- mean(dados$delta)*100
prop
```

### Ajuste do modelo ATF usando o pacote `survival`:

```{r}
require(survival)
ajust <- survreg(Surv(times, delta)~x1+x2, dist = "exponential", data=dados)
summary(ajust)
```